{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/task-input/task-input.component.ts","./src/app/task-input/task-input.component.html","./src/app/task.service.ts","./src/app/todo-list/todo-list.component.ts","./src/app/todo-list/todo-list.component.html","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tudu';\n}\n","<app-top-bar></app-top-bar>\n<app-task-input></app-task-input>\n<app-todo-list></app-todo-list>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { TaskInputComponent } from './task-input/task-input.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    TaskInputComponent,\n    TodoListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\n\nimport { TaskService } from '../task.service';\nimport { Task } from '../interfaces/Task';\n\n@Component({\n  selector: 'app-task-input',\n  templateUrl: './task-input.component.html',\n  styleUrls: ['./task-input.component.css']\n})\nexport class TaskInputComponent implements OnInit {\n  taskForm;\n\n  constructor(\n    private taskService: TaskService,\n    private formBuilder: FormBuilder,\n  ) {\n    this.taskForm = this.formBuilder.group({\n      taskName : ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(task: Task): void {\n    this.taskService.addNewTask(task.taskName);\n    this.taskForm.reset();\n  }\n\n}\n","<br>\n<form [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit(taskForm.value)\">\n    <div>\n        <input id=\"newTask\" type=\"text\" formControlName=\"taskName\" placeholder=\"Enter a new task\" autocomplete=\"off\" required>\n    </div>\n</form>","import { Injectable } from '@angular/core';\nimport { Task } from './interfaces/Task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  tasks: Task[] = [];\n\n  constructor() { }\n\n  addNewTask(taskName: string): void {\n    console.log(Object.keys(this.tasks).length);\n    let taskId = Object.keys(this.tasks).length + 1;\n    let completed = false;\n\n    this.tasks.push({\n      taskId,\n      taskName,\n      completed\n    });\n  }\n\n  deleteTask(taskId: number): void {\n    let taskToDelete = this.findTaskIndex(taskId);\n    this.tasks.splice(taskToDelete, 1);\n  }\n\n  findTaskIndex(taskId): number {\n    return this.tasks.findIndex(task => task.taskId === taskId)\n  }\n\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  clearTasks(): Task[] {\n    this.tasks = [];\n    return this.tasks;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { TaskService } from '../task.service';\nimport { Task } from '../interfaces/Task';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit {\n\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit(): void {\n    this.tasks = this.taskService.getTasks();\n  }\n\n  deleteTask(taskId: number) {\n    this.taskService.deleteTask(taskId);\n  }\n\n}\n","<div class=\"list-wrapper\">\n    <div class=\"todo-list\">\n        <div *ngFor=\"let task of tasks; index as i\">\n            <div class=\"task-item\" *ngIf=\"!task.completed\">\n                <input type=\"checkbox\" class=\"task-status\" name=\"taskStatus\" [(ngModel)]=\"tasks[i].completed\">\n                <input type=\"text\" class=\"task-name\" [(ngModel)]=\"tasks[i].taskName\">\n                <button class=\"delete-btn\" (click)=\"deleteTask(task.taskId)\">Delete</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"divider\"></div>\n\n    <div class=\"done-list\">\n        <div *ngFor=\"let task of tasks; index as i\">\n            <div class=\"task-item\" *ngIf=\"task.completed\">\n                <input type=\"checkbox\" class=\"task-status\" name=\"taskStatus\" [(ngModel)]=\"tasks[i].completed\">\n                <input type=\"text\" class=\"task-name\" [(ngModel)]=\"tasks[i].taskName\">\n                <button class=\"delete-btn\" (click)=\"deleteTask(task.taskId)\">Delete</button>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Tudú</h1>\n<p>A simple to-do app.</p>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}